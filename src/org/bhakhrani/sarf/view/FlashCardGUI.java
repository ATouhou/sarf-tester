package org.bhakhrani.sarf.view;

import java.awt.Toolkit;
import java.text.DecimalFormat;
import java.util.ArrayList;

import org.bhakhrani.sarf.logic.Maadi;
import org.bhakhrani.sarf.logic.Mudaari;
import org.bhakhrani.sarf.logic.ParseTester;
import org.bhakhrani.sarf.logic.Table;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FlashCardGUI.java
 *
 * Created on Jan 15, 2010, 11:13:19 AM
 */

/**
 *
 * @author User
 */
public class FlashCardGUI extends javax.swing.JFrame {

    /** Creates new form FlashCardGUI */
    public FlashCardGUI() 
    {
		if (!debug) 
		{
			String fileName = "verb_List_Formatted_mazeed.txt";
			ArrayList<Table> tables = new ArrayList<Table>();
			Table maadi = new Maadi();
			Table mudaari = new Mudaari();
			tables.add(maadi);
			tables.add(mudaari);
			quiz = new FlashCardQuiz(fileName, tables);
			initComponents();
		}
		else
		{
			String fileName = "verb_List_Formatted.txt";
			ArrayList<Table> tables = new ArrayList<Table>();
			Table maadi = new Maadi();
			Table mudaari = new Mudaari();
			tables.add(maadi);
			tables.add(mudaari);
			quiz = new FlashCardQuiz(fileName, tables);
			initComponents();
			testParse();
		}
    }

    private void testParse()
    {
    	ParseTester tester = new ParseTester();
//    	String text = tester.testPrint();
    	String text = tester.allText();
    	questionTextArea.setText(text);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        questionBox = new javax.swing.JScrollPane();
        questionTextArea = new javax.swing.JTextArea();
        answerBox = new javax.swing.JScrollPane();
        answerTextArea = new javax.swing.JTextArea();
        answerButton = new javax.swing.JButton();
        questionLabel = new javax.swing.JLabel();
        answerLabel = new javax.swing.JLabel();
        correctButton = new javax.swing.JButton();
        incorrectButton = new javax.swing.JButton();
        scoreArea = new javax.swing.JLayeredPane();
        numQuestionL = new javax.swing.JLabel();
        totalNum = new javax.swing.JTextField();
        percentL = new javax.swing.JLabel();
        percentNum = new javax.swing.JTextField();
        scoreLabel = new javax.swing.JLabel();
        numCorrectL = new javax.swing.JLabel();
        correctNum = new javax.swing.JTextField();
        instructionStartArea = new javax.swing.JLayeredPane();
        startArea = new javax.swing.JLayeredPane();
        startText = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        quizSelector = new javax.swing.JComboBox();
        quizType = new javax.swing.JLabel();
        quizInstruction = new javax.swing.JLayeredPane();
        whatToDoL = new javax.swing.JLabel();
        quizInstructionBox = new javax.swing.JScrollPane();
        quizInstructionText = new javax.swing.JTextArea();
        stopButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenue = new javax.swing.JMenu();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sarf Quiz 2.0");

        questionTextArea.setColumns(18);
        questionTextArea.setEditable(false);
        questionTextArea.setFont(new java.awt.Font("Monospaced", 0, 20));
        questionTextArea.setRows(3);
        questionTextArea.setTabSize(5);
        questionBox.setViewportView(questionTextArea);

        answerTextArea.setColumns(18);
        answerTextArea.setEditable(false);
        answerTextArea.setFont(new java.awt.Font("Monospaced", 0, 24));
        answerTextArea.setRows(3);
        answerTextArea.setTabSize(5);
        answerBox.setViewportView(answerTextArea);

        answerButton.setText("Show Answer");
        answerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButtonActionPerformed(evt);
            }
        });

        questionLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        questionLabel.setText("Question");

        answerLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        answerLabel.setText("Answer");

        correctButton.setText("Correct");
        correctButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                correctButtonActionPerformed(evt);
            }
        });

        incorrectButton.setText("Incorrect");
        incorrectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incorrectButtonActionPerformed(evt);
            }
        });

        scoreArea.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        numQuestionL.setFont(new java.awt.Font("Tahoma", 1, 11));
        numQuestionL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numQuestionL.setText("Total");
        numQuestionL.setBounds(80, 70, 100, 14);
        scoreArea.add(numQuestionL, javax.swing.JLayeredPane.DEFAULT_LAYER);

        totalNum.setEditable(false);
        totalNum.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalNum.setText("0");
        totalNum.setBounds(120, 90, 20, 20);
        scoreArea.add(totalNum, javax.swing.JLayeredPane.DEFAULT_LAYER);

        percentL.setFont(new java.awt.Font("Tahoma", 1, 11));
        percentL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        percentL.setText("Percent");
        percentL.setBounds(180, 70, 70, 14);
        scoreArea.add(percentL, javax.swing.JLayeredPane.DEFAULT_LAYER);

        percentNum.setEditable(false);
        percentNum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        percentNum.setText("0%");
        percentNum.setBounds(195, 90, 40, 20);
        scoreArea.add(percentNum, javax.swing.JLayeredPane.DEFAULT_LAYER);

        scoreLabel.setFont(new java.awt.Font("Tahoma", 0, 24));
        scoreLabel.setText("Score");
        scoreLabel.setBounds(100, 10, 60, 30);
        scoreArea.add(scoreLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        numCorrectL.setFont(new java.awt.Font("Tahoma", 1, 11));
        numCorrectL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numCorrectL.setText("Correct");
        numCorrectL.setBounds(0, 70, 80, 14);
        scoreArea.add(numCorrectL, javax.swing.JLayeredPane.DEFAULT_LAYER);

        correctNum.setEditable(false);
        correctNum.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        correctNum.setText("0");
        correctNum.setBounds(30, 90, 20, 20);
        scoreArea.add(correctNum, javax.swing.JLayeredPane.DEFAULT_LAYER);

        startArea.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        startArea.setOpaque(true);

        startText.setFont(new java.awt.Font("Tahoma", 1, 11));
        startText.setText("Select Quiz Type and Press Start");
        startText.setBounds(40, 10, 190, 14);
        startArea.add(startText, javax.swing.JLayeredPane.DEFAULT_LAYER);

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        startButton.setBounds(190, 60, 73, 23);
        startArea.add(startButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        quizSelector.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"Details to Conjugation", "Conjugations to Details", "Maadi to Mudaari", "Mudaari to Maadi", "Verb to Definition", "Definition to Verb", "Random"
        }));
        quizSelector.setSelectedIndex(0);
        quizSelector.setBounds(10, 60, 150, 20);
        startArea.add(quizSelector, javax.swing.JLayeredPane.DEFAULT_LAYER);

        quizType.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quizType.setText("Question Type");
        quizType.setBounds(30, 40, 100, 14);
        startArea.add(quizType, javax.swing.JLayeredPane.DEFAULT_LAYER);

        startArea.setBounds(-1, 0, 270, 120);
        instructionStartArea.add(startArea, javax.swing.JLayeredPane.DEFAULT_LAYER);

        quizInstruction.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        quizInstruction.setOpaque(true);

        whatToDoL.setFont(new java.awt.Font("Tahoma", 0, 24));
        whatToDoL.setText("What To Do");
        whatToDoL.setBounds(70, 0, 140, 30);
        quizInstruction.add(whatToDoL, javax.swing.JLayeredPane.DEFAULT_LAYER);

        quizInstructionText.setBackground(new java.awt.Color(224, 223, 227));
        quizInstructionText.setColumns(10);
        quizInstructionText.setEditable(false);
        quizInstructionText.setLineWrap(true);
        quizInstructionText.setRows(4);
        quizInstructionText.setWrapStyleWord(true);
        quizInstructionBox.setViewportView(quizInstructionText);

        quizInstructionBox.setBounds(20, 30, 230, 80);
        quizInstruction.add(quizInstructionBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        quizInstruction.setBounds(-1, 0, 270, 120);
        instructionStartArea.add(quizInstruction, javax.swing.JLayeredPane.DEFAULT_LAYER);

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        fileMenue.setText("File");
        menuBar.add(fileMenue);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(questionLabel)
                .addContainerGap(397, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(questionBox, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(scoreArea, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(stopButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addComponent(answerButton)
                        .addGap(42, 42, 42)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                        .addComponent(answerLabel)
                        .addGap(122, 122, 122))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(answerBox, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(correctButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104)
                                .addComponent(incorrectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addComponent(instructionStartArea, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(questionBox, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(answerBox, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questionLabel)
                    .addComponent(answerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(stopButton)
                    .addComponent(correctButton)
                    .addComponent(incorrectButton)
                    .addComponent(answerButton))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scoreArea, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instructionStartArea, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void incorrectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incorrectButtonActionPerformed
        // TODO add your handling code here:
        if (answerShowing) 
        {
			// TODO add your handling code here:
			crntCard = quiz.selectQuiz(quizSelector.getSelectedIndex());
			numQuestions++;
			showQuestion(crntCard);
			updateScore();
		}
        else
			Toolkit.getDefaultToolkit().beep();  // signal an error
    }//GEN-LAST:event_incorrectButtonActionPerformed

    private void correctButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_correctButtonActionPerformed
        if (answerShowing) 
        {
			// TODO add your handling code here:
			crntCard = quiz.selectQuiz(quizSelector.getSelectedIndex());
			showQuestion(crntCard);
			numQuestions++;
			numCorrect++;
			updateScore();
		}
        else
			Toolkit.getDefaultToolkit().beep();  // signal an error
    }//GEN-LAST:event_correctButtonActionPerformed

    private void updateScore() 
    {
		// TODO Auto-generated method stub
		correctNum.setText(numCorrect + "");
		totalNum.setText(numQuestions + "");
		double percentRaw = (double)numCorrect/numQuestions;
//		System.out.println(percentRaw);
		int percent = (int)(percentRaw * 100);
		String formattedPercent = percent + "%";
//		System.out.println(formattedPercent);
		percentNum.setText(formattedPercent);
	}

	private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // TODO add your handling code here:
        instructionStartArea.moveToBack(quizInstruction);
    }//GEN-LAST:event_stopButtonActionPerformed

    private void answerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButtonActionPerformed
        // TODO add your handling code here:
    	FlashCard card = crntCard;
    	answerTextArea.setText(card.getAnswer());
    	answerShowing = true;
    	repaint();    
    }//GEN-LAST:event_answerButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
//        startArea.moveToBack(this);
//        startArea.setVisible(false);
//        instructionStartArea.moveToFront(this);
//        startArea.setVisible(true);
        instructionStartArea.moveToBack(startArea);
        int quizNum = quizSelector.getSelectedIndex();
        crntCard = quiz.selectQuiz(quizNum);
        showQuestion(crntCard);
//        System.out.println("start button pressed");
    }//GEN-LAST:event_startButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    
    private void showQuestion(FlashCard crntCard)
    {
    	FlashCard card = crntCard;
    	questionTextArea.setText(card.getQuestion());
    	quizInstructionText.setText(card.getInstructions());
    	answerTextArea.setText("");
    	answerShowing = false;
    	repaint();    	
    }
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
//            private FlashCardQuiz quiz;

			public void run() {
                new FlashCardGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane answerBox;
    private javax.swing.JButton answerButton;
    private javax.swing.JLabel answerLabel;
    private javax.swing.JTextArea answerTextArea;
    private javax.swing.JButton correctButton;
    private javax.swing.JMenu fileMenue;
    private javax.swing.JButton incorrectButton;
    private javax.swing.JLayeredPane instructionStartArea;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane quizInstructionBox;
    private javax.swing.JTextArea quizInstructionText;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel numQuestionL;
    private javax.swing.JLabel numCorrectL;
    private javax.swing.JLabel percentL;
    private javax.swing.JTextField percentNum;
    private javax.swing.JTextField totalNum;
    private javax.swing.JTextField correctNum;
    private javax.swing.JScrollPane questionBox;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JTextArea questionTextArea;
    private javax.swing.JLayeredPane quizInstruction;
    private javax.swing.JComboBox quizSelector;
    private javax.swing.JLabel quizType;
    private javax.swing.JLayeredPane scoreArea;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JLayeredPane startArea;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel startText;
    private javax.swing.JButton stopButton;
    private javax.swing.JLabel whatToDoL;
    private FlashCardQuiz quiz;
    private FlashCard crntCard;
    private boolean answerShowing;
    private int numQuestions;
    private int numCorrect;
    private boolean debug = false;
    // End of variables declaration//GEN-END:variables

}
